{"version":3,"sources":["../src/schema.js"],"names":["typeDefs","resolvers","Query","user","root","args","context","info","data","find","item","id"],"mappings":";;;;;;AAAA;;AACA;;AAEA;AACA,IAAMA,gGAAN;;AASA;AACA,IAAMC,YAAY;AAChBC,SAAO;AACLC,UAAM,cAACC,IAAD,EAAOC,IAAP,EAAaC,OAAb,EAAsBC,IAAtB,EAA+B;AACnC,aAAOC,WAAKC,IAAL,CAAU;AAAA,eAAQC,KAAKC,EAAL,IAAWN,KAAKM,EAAxB;AAAA,OAAV,CAAP;AACD;AAHI;AADS,CAAlB;;AAQA;kBACe,wCAAqB;AAClCX,oBADkC;AAElCC;AAFkC,CAArB,C","file":"schema.js","sourcesContent":["import { makeExecutableSchema } from 'graphql-tools';\nimport { data } from './data';\n\n// SCHEMA DEFINITION\nconst typeDefs = `\ntype Query {\n  user(id: ID!): User\n}\ntype User {\n  id: ID!\n  name: String\n}`;\n\n// RESOLVERS\nconst resolvers = {\n  Query: {\n    user: (root, args, context, info) => {\n      return data.find(item => item.id == args.id);\n    }\n  }\n};\n\n// (EXECUTABLE) SCHEMA\nexport default makeExecutableSchema({\n  typeDefs,\n  resolvers\n});\n"]}