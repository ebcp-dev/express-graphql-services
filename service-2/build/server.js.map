{"version":3,"sources":["../src/server.js"],"names":["app","PORT","process","env","use","req","res","send","bodyParser","json","schema","listen","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEA,IAAMC,OAAOC,QAAQC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;;AAEAD,IAAII,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIC,IAAJ,WAAiBN,IAAjB;AACD,CAFD;;AAIAD,IAAII,GAAJ,CAAQ,UAAR,EAAoBI,qBAAWC,IAAX,EAApB,EAAuC,yCAAe,EAAEC,wBAAF,EAAf,CAAvC;;AAEAV,IAAIW,MAAJ,CAAWV,IAAX,EAAiB;AAAA,SACfW,QAAQC,GAAR,CAAY,yCAAyCZ,IAArD,CADe;AAAA,CAAjB","file":"server.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport { graphqlExpress } from 'apollo-server-express';\nimport { makeRemoteExecutableSchema, introspectSchema } from 'graphql-tools';\nimport schema from './schema';\n\nconst app = express();\n\nconst PORT = process.env.PORT || 8083;\n\napp.use('/', (req, res) => {\n  res.send(`PORT ${PORT} is listening!`);\n});\n\napp.use('/graphql', bodyParser.json(), graphqlExpress({ schema }));\n\napp.listen(PORT, () =>\n  console.log('Service 2 GraphQL listening on port:' + PORT)\n);\n"]}